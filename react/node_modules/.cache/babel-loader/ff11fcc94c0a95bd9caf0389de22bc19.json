{"ast":null,"code":"var _jsxFileName = \"/home/struckm/code/covid-19/react/src/components/covid.jsx\";\nimport React, { Component } from 'react';\nimport './covid.css';\n\nclass Covid extends Component {\n  constructor(props, context) {\n    super(props);\n    this.state = {\n      ltc: null,\n      state: null\n    };\n  }\n\n  componentDidMount() {\n    this.getLTCData().then(resp => {\n      if (resp.ok) {\n        return resp.json();\n      } else {\n        throw new Error('Error retrieving data from server');\n      }\n    }).then(json => {\n      console.log(json);\n      this.setState({\n        ltc: json.ltc,\n        state: json.state\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  getLTCData() {\n    // make a call to the backend to retrieve the LTC data\n    const url = 'http://localhost:5000/'; // const options = {\n    //     method:'GET',\n    //     mode: 'no-cors',\n    //     headers: {\n    //         'Content-Type': 'application/json'\n    //     }\n    // };\n\n    return fetch(url);\n  }\n\n  render() {\n    let {\n      ltc,\n      state\n    } = this.state;\n    let ltcUpdateDate = null;\n    let stateUpdateDate = null;\n    let ltcDeaths = null;\n    let stateDeaths = null;\n\n    if (ltc) {\n      ltcUpdateDate = `${ltc.LastUpdateDate.month}/${ltc.LastUpdateDate.day}/${ltc.LastUpdateDate.year}`;\n      ltcDeaths = ltc.FacilityValues.reduce((sum, facility) => sum += facility.deaths, 0);\n    }\n\n    if (state) {\n      stateUpdateDate = `${state.LastUpdateDate.month}/${state.LastUpdateDate.day}/${state.LastUpdateDate.year}`;\n      stateDeaths = state.state_testing_results.values[state.state_testing_results.values.length - 1].deaths;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"COVID-19 Stats\"), React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"State Data\"), stateDeaths && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Deaths: \", stateDeaths, \"  \"), stateUpdateDate && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Last Update Date: \", stateUpdateDate)), React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Long Term Care Stats\"), ltcDeaths && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Deaths: \", ltcDeaths, \"  \"), ltcUpdateDate && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Last Update Date: \", ltcUpdateDate)));\n  }\n\n}\n\nexport default Covid;","map":{"version":3,"sources":["/home/struckm/code/covid-19/react/src/components/covid.jsx"],"names":["React","Component","Covid","constructor","props","context","state","ltc","componentDidMount","getLTCData","then","resp","ok","json","Error","console","log","setState","catch","error","url","fetch","render","ltcUpdateDate","stateUpdateDate","ltcDeaths","stateDeaths","LastUpdateDate","month","day","year","FacilityValues","reduce","sum","facility","deaths","state_testing_results","values","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './covid.css';\n\nclass Covid extends Component {\n    constructor(props, context) {\n        super(props);\n\n        this.state = {\n            ltc: null,\n            state: null\n        }\n    }\n\n    componentDidMount() {\n        this.getLTCData()\n            .then((resp) => {\n                if(resp.ok) {\n                    return resp.json();\n                } else {\n                    throw new Error('Error retrieving data from server');\n                }\n            })\n            .then((json) => {\n                console.log(json);\n                this.setState({\n                    ltc: json.ltc,\n                    state: json.state\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }\n\n    getLTCData() {\n        // make a call to the backend to retrieve the LTC data\n        const url = 'http://localhost:5000/';\n\n        // const options = {\n        //     method:'GET',\n        //     mode: 'no-cors',\n        //     headers: {\n        //         'Content-Type': 'application/json'\n        //     }\n        // };\n\n        return fetch(url);\n    }\n\n    render() {\n        let { ltc, state } = this.state;\n        let ltcUpdateDate = null;\n        let stateUpdateDate = null;\n        let ltcDeaths = null;\n        let stateDeaths = null;\n\n        if(ltc) {\n            ltcUpdateDate = `${ltc.LastUpdateDate.month}/${ltc.LastUpdateDate.day}/${ltc.LastUpdateDate.year}`;\n            ltcDeaths = ltc.FacilityValues.reduce((sum, facility) => sum += facility.deaths, 0);\n        }\n\n        if(state) {\n            stateUpdateDate = `${state.LastUpdateDate.month}/${state.LastUpdateDate.day}/${state.LastUpdateDate.year}`;\n            stateDeaths = state.state_testing_results.values[state.state_testing_results.values.length - 1].deaths;\n        }\n\n        return (\n            <div>\n                <h1>\n                    COVID-19 Stats\n                </h1>\n                <section>\n                    <h1>State Data</h1>\n                    { stateDeaths &&\n                        <span>Deaths: {stateDeaths}  </span>\n                    }\n                    { stateUpdateDate &&\n                        <span>Last Update Date: {stateUpdateDate}</span>\n                    }\n                </section>               \n                <section>\n                    <h1>Long Term Care Stats</h1>\n                    { ltcDeaths &&\n                        <span>Deaths: {ltcDeaths}  </span>\n                    }\n                    { ltcUpdateDate && \n                        <span>Last Update Date: {ltcUpdateDate}</span>\n                    }\n                </section>\n            </div>\n        );\n    }\n}\n\nexport default Covid;"]},"metadata":{},"sourceType":"module"}